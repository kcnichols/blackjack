'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();var _react=require('react');var _react2=_interopRequireDefault(_react);var _s2sBaseClass=require('s2s-base-class');var _s2sBaseClass2=_interopRequireDefault(_s2sBaseClass);var _immutable=require('immutable');var _cell=require('./cell.js');var _cell2=_interopRequireDefault(_cell);var _s2sButton=require('s2s-button');var _s2sButton2=_interopRequireDefault(_s2sButton);require('moment-range');var _moment=require('moment');var _moment2=_interopRequireDefault(_moment);var _styles=require('./styles.js');var _styles2=_interopRequireDefault(_styles);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called')}return call&&(typeof call==='object'||typeof call==='function')?call:self}function _inherits(subClass,superClass){if(typeof superClass!=='function'&&superClass!==null){throw new TypeError('Super expression must either be null or a function, not '+typeof superClass)}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass}var TimeView=function(_S2SBaseComponent){_inherits(TimeView,_S2SBaseComponent);function TimeView(props){_classCallCheck(this,TimeView);var _this=_possibleConstructorReturn(this,(TimeView.__proto__||Object.getPrototypeOf(TimeView)).call(this,props));_this.displayName='TimeView';// Initialize state with incoming props for hour and minute.
_this.state={inputWithFocus:'hour',hourValue:_this.props.hour,minuteValue:_this.props.minute,ampm:_this.props.ampm};//this.updateInputs = this.updateInputs.bind(this); // NOTE: This is not being invoked anywhere.
_this.getButtons=_this.getButtons.bind(_this);_this.handleInputChange=_this.handleInputChange.bind(_this);_this.ampmClick=_this.ampmClick.bind(_this);_moment2.default.locale(_this.props.locale);_this.changeTimer=0;_this.hourOnFocus=_this.hourOnFocus.bind(_this);_this.minuteOnFocus=_this.minuteOnFocus.bind(_this);//this.emptyFunc = this.emptyFunc.bind(this); // NOTE: I'm not sure what this function is supposed to do. I was instructed by James to delete but I will comment out for now until I can speak with Elizabeth about it's purpose. - KCN
_this.backOnClick=_this.backOnClick.bind(_this);_this.prefetchStyles();return _this}_createClass(TimeView,[{key:'componentWillReceiveProps',value:function componentWillReceiveProps(nextProps){if(nextProps.hasOwnProperty('hour')){this.setState(_extends({},this.state,{hourValue:nextProps.hour}))}if(nextProps.hasOwnProperty('minute')){this.setState(_extends({},this.state,{minuteValue:nextProps.minute}))}if(nextProps.hasOwnProperty('ampm')){this.setState(_extends({},this.state,{ampm:nextProps.ampm}))}}},{key:'shouldComponentUpdate',value:function shouldComponentUpdate(nextProps,nextState){return!(0,_immutable.fromJS)(nextProps).equals((0,_immutable.fromJS)(this.props))||!(0,_immutable.fromJS)(nextState).equals((0,_immutable.fromJS)(this.state))}},{key:'componentDidMount',value:function componentDidMount(){this.refs[this.state.inputWithFocus].focus()}},{key:'getDefaultStyle',value:function getDefaultStyle(styleName,objectPropState){return(0,_styles2.default)(styleName,objectPropState)}},{key:'prefetchStyles',value:function prefetchStyles(){this.button=this.getStyle('button');this.buttonArea=this.getStyle('buttonArea');this.backButton=this.getStyle('backButton');this.timeWrapper=this.getStyle('timeWrapper');this.timeFormatWrapper=this.getStyle('timeFormatWrapper');this.topContainerTimeView=this.getStyle('topContainerTimeView');this.hourWrapper=this.getStyle('hourWrapper');this.hourStyle=this.getStyle('hour');this.minuteWrapper=this.getStyle('minuteWrapper');this.minuteStyle=this.getStyle('minute');this.dateTimeStyle=this.getStyle('dateTime');this.buttonWrapperStyles=this.getStyle('buttonWrapperStyles')}// emptyFunc(e){
//   console.log('>>>>>>>>')
//   if(e.charCode == '13') {
//
//   }
// }
},{key:'backOnClick',value:function backOnClick(){if(this.state.inputWithFocus=='hour'){this.setState(_extends({},this.state,{hourValue:this.state.hourValue.substr(0,this.state.hourValue.length-1)}))}else{this.setState(_extends({},this.state,{minuteValue:this.state.minuteValue.substr(0,this.state.minuteValue.length-1)}))}}},{key:'getButtons',value:function getButtons(){var _this2=this;var buttons=['1','2','3','4','5','6','7','8','9','0'].map(function(button,i){return _react2.default.createElement('div',{style:button!=='0'?_this2.button:_extends({},_this2.button,{width:'60px',flex:'4 0 43%',marginLeft:'5px'}),key:i,role:'buttons',tabIndex:0,onClick:_this2.handleInputChange//onKeyPress={this.emptyFunc}
},_react2.default.createElement(_cell2.default,{key:i,dateVal:button}))});return _react2.default.createElement('div',{style:this.buttonArea},buttons,_react2.default.createElement(_s2sButton2.default,{ariaLabel:'Back space button',svgType:'BackspaceIconSVG',compStyle:this.backButton,cbClick:this.backOnClick}))}// updateInputs(hour,minute,ampm) {
//   console.log('howwwwwww')
//   let hourData = this.state.hour;
//
//   if(this.props.isTwelveHour == true) {
//     if(this.state.ampm == 'pm' ) {
//       if(this.state.hour > 12) {
//         hourData = this.state.hour + 12;
//         //console.log(hourData);
//       }
//     } else {
//       hourData = this.state.hour;
//     }
//   }
//   this.props.cbInputChange(hourData,minute,ampm);
// }
},{key:'isTextSelected',value:function isTextSelected(input){// returns bool indicating whether all text is selected or not
if(typeof input.selectionStart==='number'){return input.selectionStart==0&&input.selectionEnd==input.value.length}else if(typeof document.selection!='undefined'){input.focus();return document.selection.createRange().text==input.value}}},{key:'handleInputChange',value:function handleInputChange(event){var _this3=this;//console.log('event---', event.nativeEvent);
var newValue=void 0;var newState=_extends({},this.state);var valueToUpdate=void 0;// which input is to be updated?
if(this.state.inputWithFocus=='hour'){valueToUpdate='hourValue'}else{valueToUpdate='minuteValue'}var targetValue=void 0;// wrap in try catch so it will continue
try{targetValue=decodeURI(encodeURI(event.target.value))}catch(e){targetValue=event.target.value}// Evaluate the event to get the newValue
if(event.nativeEvent.type=='input'){newValue=targetValue}else{// if all text is selected, replace value, otherwise concat
newValue=this.isTextSelected(this.refs[this.state.inputWithFocus])?event.target.getAttribute('label'):this.state[valueToUpdate]+event.target.getAttribute('label')}if(newValue.length>2&&this.state.inputWithFocus=='minute'){// only allow two digits for minutes
newValue=newValue.substring(0,2)}if(newValue.length==2&&this.state.inputWithFocus=='hour'){// jump to minutes input after two hour digits entered
this.refs.minute.focus();newState=_extends({},newState,{inputWithFocus:'minute'})}// set newValue in newState
newState[valueToUpdate]=newValue;//console.log('Input on change', valueToUpdate, newValue, newState);
this.setState(_extends({},this.state,newState));// reset and set timer to callback to parent with new value
if(this.changeTimer!=0){clearTimeout(this.changeTimer)}this.changeTimer=setTimeout(function(){var paddedValue='0'+newValue;paddedValue=paddedValue.substring(paddedValue.length-2);// If padding is needed we set the state.
if(paddedValue!==_this3.state[valueToUpdate]){newState[valueToUpdate]=paddedValue;_this3.setState(_extends({},_this3.state,newState))}// Validating numbers are between 1-12 in 12 hour format
var doSendData=true;if(_this3.props.isTwelveHour&&_this3.state.hourValue>12){console.error(_this3.state.hourValue+' is not a valid value for hour');doSendData=false}// Validating numbers are between 0-23in 24 hour format
if(!_this3.props.isTwelveHour&&_this3.state.hourValue>23){console.error(_this3.state.hourValue+' is not a valid value for hour');doSendData=false}// Validating numbers are between 0-59 minutes format
if(_this3.state.minuteValue>59){console.error(_this3.state.minuteValue+' is not a valid value for minute');doSendData=false}if(doSendData==true){_this3.props.cbInputChange(_this3.state.hourValue,_this3.state.minuteValue,_this3.state.ampm)}else{console.error('Error: Cannot send cbInputChange() because one or more values are incorrect.')}},2000)}},{key:'ampmClick',value:function ampmClick(){var _this4=this;var ampm=void 0;if(this.state.ampm=='am'){ampm='pm'}else{ampm='am'}this.setState(_extends({},this.state,{ampm:ampm}));if(this.changeTimer!=0){clearTimeout(this.changeTimer)}this.changeTimer=setTimeout(function(){_this4.props.cbInputChange(_this4.state.hourValue,_this4.state.minuteValue,_this4.state.ampm)},1000)}},{key:'minuteOnFocus',value:function minuteOnFocus(){this.refs.minute.select();this.setState(_extends({},this.state,{inputWithFocus:'minute'}))}},{key:'hourOnFocus',value:function hourOnFocus(){//console.log('minute focused');
this.refs.hour.select();this.isKeyClickConcat=false;this.setState(_extends({},this.state,{inputWithFocus:'hour',hourSelected:true}))}},{key:'render',value:function render(){//console.log('timeView state', this.state);
return _react2.default.createElement('div',{className:'timeWrapper',style:this.timeWrapper},_react2.default.createElement('div',{className:'timeFormatWrapper',style:this.timeFormatWrapper},_react2.default.createElement('div',{style:this.topContainerTimeView},_react2.default.createElement('div',{className:'hourWrapper',style:this.hourWrapper},_react2.default.createElement('input',{'aria-label':this.getIntlText('ARIA-INPUT','Input'),className:'hour',ref:'hour',placeholder:'hh',style:this.hourStyle,value:this.state.hourValue,onFocus:this.hourOnFocus,onChange:this.handleInputChange})),':',_react2.default.createElement('div',{className:'minuteWrapper',style:this.minuteWrapper},_react2.default.createElement('input',{'aria-label':this.getIntlText('ARIA-INPUT','Input'),className:'minute',ref:'minute',placeholder:'mm',style:this.minuteStyle,value:this.state.minuteValue,onFocus:this.minuteOnFocus,onChange:this.handleInputChange})),this.props.isTwelveHour===false?undefined:_react2.default.createElement(_s2sButton2.default,{ariaLabel:'date time',className:'am-pm',placeholder:'ampm',ref:'ampm',buttonLabel:this.state.ampm,value:this.state.ampm,cbClick:this.ampmClick,compStyle:this.dateTimeStyle}))),_react2.default.createElement('div',{style:this.buttonWrapperStyles},this.getButtons()))}}]);return TimeView}(_s2sBaseClass2.default);TimeView.propTypes={ampm:_react2.default.PropTypes.string,cbInputChange:_react2.default.PropTypes.func,compStyle:_react2.default.PropTypes.object,hour:_react2.default.PropTypes.string,isTwelveHour:_react2.default.PropTypes.bool,locale:_react2.default.PropTypes.string,minute:_react2.default.PropTypes.string};TimeView.defaultProps={ampm:'am',cbInputChange:function cbInputChange(){console.log('Please provide a callback function for cbInputChange')},isTwelveHour:true,hour:'12',locale:'en',minute:'00'};exports.default=TimeView;
