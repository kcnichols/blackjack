import React from 'react';
import DatePicker from '../src/index.js';
import { shallow, mount, render } from 'enzyme';
import sinon from 'sinon';
jest.unmock('../src/index.js');

describe('DatePicker Component', ()=>{

  it('renders a Calendar', () => {
    const wrapper = shallow(
      <DatePicker
          dateVal='Date Value'
      />);

    wrapper.setState({ dropDownDisplayed: true, calendarDisplayed: true });
    //console.log('wrapper', wrapper.find('Calendar').debug());
    expect(wrapper.find('Calendar').length).toEqual(1);
  });

  it('does NOT render a Calendar', () => {
    const wrapper = shallow(
      <DatePicker
          dateVal='Date Value'
      />);

    wrapper.setState({ dropDownDisplayed: true, calendarDisplayed: false });
    //console.log('wrapper', wrapper.find('Calendar').debug());
    expect(wrapper.find('Calendar').length).toEqual(0);
  });

  it('does NOT render a Calendar', () => {
    const wrapper = shallow(
      <DatePicker
          dateVal='Date Value'
      />);

    wrapper.setState({ dropDownDisplayed: false, calendarDisplayed: true });
    //console.log('wrapper', wrapper.find('Calendar').debug());
    expect(wrapper.find('Calendar').length).toEqual(0);
  });

  it('renders TimeView', () => {
    const wrapper = shallow(
      <DatePicker
          dateVal='Date Value'
      />);

    wrapper.setState({ dropDownDisplayed: true, calendarDisplayed: false });
    //console.log('wrapper', wrapper.find('Calendar').debug());
    expect(wrapper.find('TimeView').length).toEqual(1);
  });

  it('renders time button', () => {
    const wrapper = shallow(
      <DatePicker
          dateVal='Date Value'
          displayTime
      />);

    //console.log('wrapper', wrapper.find('Calendar').debug());
    expect(wrapper.find('.positionedButtonsWrapper').children().length).toEqual(2);
  });

  it('does not render time button', () => {
    const wrapper = shallow(
      <DatePicker
          dateVal='Date Value'
          displayTime={false}
          dateTimeFormat="MMMM DD, YYYY"
      />);

    //console.log('wrapper', wrapper.find('.positionedButtonsWrapper').childAt(1).debug());
    expect(wrapper.find('.positionedButtonsWrapper').children().length).toEqual(1);
  });




});
