import React from 'react';
import S2SBaseComponent from 's2s-base-class';
import Svg from 'svgs';
import PropTypes from 'prop-types'

// SVG icon container it wraps path information from children classes with SVG structure.
class NativeContainerIconSVG extends S2SBaseComponent {
  constructor(props){
      super(props);
      this.displayName = 'NativeContainerIconSVG';
  }

  static propTypes = {
    title: PropTypes.string,
    scale: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    viewBox: PropTypes.string,
    preserveAspectRatio: PropTypes.string
  }

  static defaultProps = {
    scale: '1',
    height: '32',
    width: '32',
    stroke: 'none',
    viewBox: '0 0 32 32'
  }
  // <Svg  height={this.props.height} width={this.props.width} scale={this.props.scale}
  //     viewBox={this.props.viewBox} title={this.props.title}
  //     preserveAspectRatio={this.props.hasOwnProperty('preserveAspectRatio') ? this.props.preserveAspectRatio : undefined}
  //     {...other}
  // >


  render() {
    return (
      <Svg  {...this.props} >
          {this.props.children}
      </Svg>
    );
  }
}


// SVG icon container it wraps path information from children classes with SVG structure.
class ContainerIconSVG extends S2SBaseComponent {
  constructor(props){
      super(props);
      this.displayName = 'ContainerIconSVG';
}

  render() {
    return (
      <svg
          style={{height: '32px', width: '32px', stroke: 'none', ...this.props.svgStyle}}
          xmlns="http://www.w3.org/2000/svg"
          version="1.1"
          viewBox="0 0 32 32"
      >
          {this.props.children}
      </svg>
    );
  }
}

// SVG zero state container it wraps path information from children classes with the SVG structure.
class ZeroStateContainerSVG extends S2SBaseComponent {
  constructor(props){
      super(props);
      this.displayName = 'ZeroStateContainerSVG';
}

  render() {
    return (
      <svg
          style={{ ...this.props.svgStyle}}
          xmlns="http://www.w3.org/2000/svg"
          version="1.1"
          viewBox="0 0 240 220"
      >
          {this.props.children}
      </svg>
    );
  }
}

// SVG illustration container: wrapps path information from children classes with the SVG structure. This container is used for generic illustrations used throughout our applications
class IllustrationContainerSVG extends S2SBaseComponent {
  constructor(props){
      super(props);
      this.displayName = 'IllustrationContainerSVG';
}

  render() {
    return (
      <svg
          style={{ ...this.props.svgStyle}}
          xmlns="http://www.w3.org/2000/svg"
          version="1.1"
          viewBox="0 0 240 240"
      >
          {this.props.children}
      </svg>
    );
  }
}

// SVG zero state container it wraps path information from children classes with the SVG structure.
class OnboardingContainerSVG extends S2SBaseComponent {
  constructor(props){
      super(props);
      this.displayName = 'OnboardingContainerSVG';
}

  render() {
    return (
      <svg
          style={{ ...this.props.svgStyle}}
          xmlns="http://www.w3.org/2000/svg"
          version="1.1"
          viewBox="0 0 200 200"
      >
          {this.props.children}
      </svg>
    );
  }
}

// SVG Full logo container it wraps the full logo inside a container
class ContainerFullLogoSVG extends S2SBaseComponent {
  constructor(props){
      super(props);
      this.displayName = 'ContainerFullLogoSVG';
}

  render() {
    return (
      <svg
          style={{width: '200px', stroke: 'none', ...this.props.svgStyle}}
          xmlns="http://www.w3.org/2000/svg"
          version="1.1"
          viewBox="0 0 650 180"
      >
          {this.props.children}
      </svg>
    );
  }
}

// SVG Full logo container it wraps the full logo inside a container
class ContainerMarkLogoSVG extends S2SBaseComponent {
  constructor(props){
      super(props);
      this.displayName = 'ContainerMarkLogoSVG';
}

  render() {
    return (
      <svg
          style={{height: '80px', width: '80px', stroke: 'none', ...this.props.svgStyle}}
          xmlns="http://www.w3.org/2000/svg"
          version="1.1"
          viewBox="0 0 180 180"
      >
          {this.props.children}
      </svg>
    );
  }
}

export {
  ContainerIconSVG,
  ContainerFullLogoSVG,
  ContainerMarkLogoSVG,
  IllustrationContainerSVG,
  NativeContainerIconSVG,
  OnboardingContainerSVG,
  ZeroStateContainerSVG
};
