// <<componentName>>/__tests__/index-js

//'use strict';
import React from 'react';
import { shallow, mount, render } from 'enzyme';
import sinon from 'sinon';
jest.unmock('../src/index.jsx');
import ReactDOM from 'react-dom';
import S2SBaseComponent from '../src/index.jsx';

export default class TestClass extends S2SBaseComponent {
  constructor(props){
    super(props);
  }

  getCompStyle() {
    return this.props.compStyle;
  }

  getDefaultStyle(styleName) {
    const styles = {
      testStyle: {
        fontSize: '30px',
        color: 'blue'
      }
    };

    return (styles[styleName]);
}

    render(){
       const testStyle = this.getStyle('testStyle');
      return (
        <div style={testStyle}>
          <span style={this.getStyle('spanStyle')}>
            This is the TEST page.
          </span>
        </div>

      );
    }
}

describe('s2s base class tests', ()=>{

  it('the correct styles are used for the style of a given component that extends the base component', () => {
    const wrapper = mount(<TestClass />);
    //console.log("WRAP>>><>>>>>>>>:", wrapper.find('div').props().style.color);
    expect(wrapper.find('div').props().style.color).toEqual('blue');

  });

  it('the a component tries to get style for a name that dosent exist, it returns as undefines', () => {
    const wrapper = mount(<TestClass />);
    expect(!wrapper.find('div').props().style);

  });
});

//tests confirmed 3/09/17 DN
// 22.58 coverage
