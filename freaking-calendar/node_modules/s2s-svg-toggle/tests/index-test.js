// <<componentName>>/__tests__/index-js

//'use strict';
import React from 'react';
import { shallow, mount, render } from 'enzyme';
import sinon from 'sinon';

jest.unmock('../src/index.jsx');
jest.unmock('../node_modules/s2s-base-class');
jest.unmock('../node_modules/sinon');
// jest.unmock('../node_modules/immutable');
// jest.unmock('../node_modules/sinon');
import ReactDOM from 'react-dom';
import {CheckboxIconSVG, ExitFullScreenIconSVG, FavoriteEmptyIconSVG, FavoriteFilledIconSVG, FullscreenIconSVG, OneColumnIconSVG, ShowPanelIconSVG, TwoColumnsIconSVG, TwoRowsIconSVG} from '../src/index.jsx';

//These tests will simply make sure that each svg has a path, title, and description.
describe('s2s-svg-toggle tests', ()=>{

  it('renders CheckboxIconSVG', () => {
    const wrapper = mount(<div><CheckboxIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders ExitFullScreenIconSVG', () => {
    const wrapper = mount(<div><ExitFullScreenIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders FavoriteEmptyIconSVG', () => {
    const wrapper = mount(<div><FavoriteEmptyIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders FavoriteFilledIconSVG', () => {
    const wrapper = mount(<div><FavoriteFilledIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders FullscreenIconSVG', () => {
    const wrapper = mount(<div><FullscreenIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders OneColumnIconSVG', () => {
    const wrapper = mount(<div><OneColumnIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders TwoColumnsIconSVG', () => {
    const wrapper = mount(<div><OneColumnIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders TwoRowsIconSVG', () => {
    const wrapper = mount(<div><OneRowsIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders ShowPanelIconSVG', () => {
    const wrapper = mount(<div><ShowPanelIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

});
