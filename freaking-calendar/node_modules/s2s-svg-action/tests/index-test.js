// s2s-svg-action/__tests__/index-js

//'use strict';
import React from 'react';
import { shallow, mount, render } from 'enzyme';
import sinon from 'sinon';

jest.unmock('../src/index.jsx');
jest.unmock('../node_modules/s2s-base-class');
jest.unmock('../node_modules/sinon');
// jest.unmock('../node_modules/immutable');
// jest.unmock('../node_modules/sinon');
import {
  AddIconSVG,
  AddBorderIconSVG,
  BackspaceIconSVG,
  ChatIconSVG,
  ChevronLeftIconSVG,
  ChevronRightIconSVG,
  ChevronUpIconSVG,
  ConsoleIconSVG,
  ContactAddIconSVG,
  DeleteIconSVG,
  EditIconSVG,
  EmailIconSVG,
  EmoticonIconSVG,
  FaxIconSVG,
  GroupAddIconSVG,
  KeypadIconSVG,
  MenuIconSVG,
  MinusIconSVG,
  NavMenuIconSVG,
  PhoneIconSVG,
  PlayIconSVG,
  PreviewIconSVG,
  PreviewHiddenIconSVG,
  SaveIconSVG,
  ScreenIconSVG,
  StopIconSVG,
  VideoIconSVG,
  VoicemailIconSVG,
  VoicemailBorderIconSVG
} from '../src/index.jsx';

jest.unmock('../src/index.jsx');
jest.unmock('../node_modules/s2s-base-class');
jest.unmock('../node_modules/sinon');
// jest.unmock('../node_modules/immutable');
// jest.unmock('../node_modules/sinon');
import ReactDOM from 'react-dom';

//These tests will simply make sure that each svg has a path, title, and description.
describe('s2s-svg-action tests', ()=>{

  it('renders AddIconSVG', () => {
    const wrapper = mount(<div><AddIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders AddBorderIconSVG', () => {
    const wrapper = mount(<div><AddBorderIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(4);
  });

  it('renders BackspaceIconSVG', () => {
    const wrapper = mount(<div><BackspaceIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(4);
  });

  it('renders ChatIconSVG', () => {
    const wrapper = mount(<div><ChatIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders ChevronLeftIconSVG', () => {
    const wrapper = mount(<div><ChevronLeftIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders ChevronRightIconSVG', () => {
    const wrapper = mount(<div><ChevronRightIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders ChevronUpIconSVG', () => {
    const wrapper = mount(<div><ChevronUpIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders ConsoleIconSVG', () => {
    const wrapper = mount(<div><ConsoleIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(4);
  });

  it('renders ContactAddIconSVG', () => {
    const wrapper = mount(<div><ContactAddIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(4);
  });

  it('renders DeleteIconSVG', () => {
    const wrapper = mount(<div><DeleteIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders EditIconSVG', () => {
    const wrapper = mount(<div><EditIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(4);
  });

  it('renders EmailIconSVG', () => {
    const wrapper = mount(<div><EmailIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(4);
  });

  it('renders EmoticonIconSVG', () => {
    const wrapper = mount(<div><EmoticonIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(4);
  });

  it('renders FaxIconSVG', () => {
    const wrapper = mount(<div><FaxIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(5);
  });

  it('renders GroupAddIconSVG', () => {
    const wrapper = mount(<div><GroupAddIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(4);
  });

  it('renders KeypadIconSVG', () => {
    const wrapper = mount(<div><KeypadIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders MenuIconSVG', () => {
    const wrapper = mount(<div><MenuIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(2);
  });

  it('renders NavMenuIconSVG', () => {
    const wrapper = mount(<div><NavMenuIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(2);
  });

  it('renders MinusIconSVG', () => {
    const wrapper = mount(<div><MinusIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(2);
  });

  it('renders PhoneIconSVG', () => {
    const wrapper = mount(<div><PhoneIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders PlayIconSVG', () => {
    const wrapper = mount(<div><PlayIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders PreviewIconSVG', () => {
    const wrapper = mount(<div><PreviewIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders PreviewHiddenIconSVG', () => {
    const wrapper = mount(<div><PreviewHiddenIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders SaveIconSVG', () => {
    const wrapper = mount(<div><SaveIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders ScreenIconSVG', () => {
    const wrapper = mount(<div><ScreenIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders StopIconSVG', () => {
    const wrapper = mount(<div><StopIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(2);
  });

  it('renders VideoIconSVG', () => {
    const wrapper = mount(<div><VideoIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders VoicemailIconSVG', () => {
    const wrapper = mount(<div><VoicemailIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(4);
  });

  it('renders VoicemailBorderIconSVG', () => {
    const wrapper = mount(<div><VoicemailBorderIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(5);
  });

});
