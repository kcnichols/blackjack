// s2s-svg-content/__tests__/index-js

//'use strict';
import React from 'react';
import { shallow, mount, render } from 'enzyme';
import sinon from 'sinon';

jest.unmock('../src/index.jsx');
jest.unmock('../node_modules/s2s-base-class');
jest.unmock('../node_modules/sinon');
// jest.unmock('../node_modules/immutable');
// jest.unmock('../node_modules/sinon');
import ReactDOM from 'react-dom';
import {
  AlertIconSVG,
  ArrowDownLeftIconSVG,
  ArrowUpRightIconSVG,
  AvatarIconSVG,
  BellEmptyIconSVG,
  BellFilledIconSVG,
  BlockChecklistIconSVG,
  BlockConfirmationIconSVG,
  BlockInfoIconSVG,
  BlockMetricsIconSVG,
  BlockTableIconSVG,
  BlockTeamListIconSVG,
  BoxIconSVG,
  CaretDownIconSVG,
  CaretUpIconSVG,
  CheckFilledIconSVG,
  ChoiceIconSVG,
  DataIconSVG,
  DraggableIconSVG,
  FirefoxIconSVG,
  GoogleChromeIconSVG,
  GroupIconSVG,
  HeadphonesIconSVG,
  HeadphonesBorderIconSVG,
  HelpIconSVG,
  HourGlassIconSVG,
  InfoIconSVG,
  LambdaIconSVG,
  LockIconSVG,
  LockBorderIconSVG,
  MailIconSVG,
  MicIconSVG,
  MicBorderIconSVG,
  MicMutedIconSVG,
  MicMutedBorderIconSVG,
  MicrosoftEdgeIconSVG,
  NoImageIconSVG,
  PauseIconSVG,
  PauseBorderIconSVG,
  ProcessIconSVG,
  PubSubIconSVG,
  SafariIconSVG,
  RunApplicationIconSVG,
  SearchIconSVG,
  SMSIconSVG,
  SpeakerIconSVG,
  StatusAvailableIconSVG,
  StatusBusyIconSVG,
  StatusOfflineIconSVG,
  StatusWarningIconSVG,
  TransfigureIconSVG,
  UpdateApplicationIconSVG
} from '../src/index.jsx';

//These tests will simply make sure that each svg has a path, title, and description.
describe('s2s-svg-conent tests', ()=>{

  it('renders AlertIconSVG', () => {
    const wrapper = mount(<div><AlertIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders ArrowDownLeftIconSVG', () => {
    const wrapper = mount(<div><ArrowDownLeftIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders ArrowUpRightIconSVG', () => {
    const wrapper = mount(<div><ArrowUpRightIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders AvatarIconSVG', () => {
    const wrapper = mount(<div><AvatarIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders BellEmptyIconSVG', () => {
    const wrapper = mount(<div><BellEmptyIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders BellFilledIconSVG', () => {
    const wrapper = mount(<div><BellFilledIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders BlockChecklistIconSVG', () => {
    const wrapper = mount(<div><BlockChecklistIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders BlockConfirmationIconSVG', () => {
    const wrapper = mount(<div><BlockConfirmationIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders BlockInfoIconSVG', () => {
    const wrapper = mount(<div><BlockInfoIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders BlockMetricsIconSVG', () => {
    const wrapper = mount(<div><BlockMetricsIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders BlockTableIconSVG', () => {
    const wrapper = mount(<div><BlockTableIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders BlockTeamListIconSVG', () => {
    const wrapper = mount(<div><BlockTeamListIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders BoxIconSVG', () => {
    const wrapper = mount(<div><BoxIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders CaretDownIconSVG', () => {
    const wrapper = mount(<div><CaretDownIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders CaretUpIconSVG', () => {
    const wrapper = mount(<div><CaretUpIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders CheckFilledIconSVG', () => {
    const wrapper = mount(<div><CheckFilledIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders ChoiceIconSVG', () => {
    const wrapper = mount(<div><ChoiceIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders DataIconSVG', () => {
    const wrapper = mount(<div><DataIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders DraggableIconSVG', () => {
    const wrapper = mount(<div><DraggableIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders FirefoxIconSVG', () => {
    const wrapper = mount(<div><FirefoxIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders GoogleChromeIconSVG', () => {
    const wrapper = mount(<div><GoogleChromeIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders GroupIconSVG', () => {
    const wrapper = mount(<div><GroupIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(4);
  });

  it('renders HeadphonesIconSVG', () => {
    const wrapper = mount(<div><HeadphonesIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders HeadphonesBorderIconSVG', () => {
    const wrapper = mount(<div><HeadphonesBorderIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(4);
  });

  it('renders HelpIconSVG', () => {
    const wrapper = mount(<div><HelpIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders HourGlassIconSVG', () => {
    const wrapper = mount(<div><HourGlassIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders InfoIconSVG', () => {
    const wrapper = mount(<div><InfoIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(4);
  });

  it('renders MailIconSVG', () => {
    const wrapper = mount(<div><MailIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(4);
  });

  it('renders LambdaIconSVG', () => {
    const wrapper = mount(<div><LambdaIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders LockIconSVG', () => {
    const wrapper = mount(<div><LockIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders LockBorderIconSVG', () => {
    const wrapper = mount(<div><LockBorderIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(6);
  });

  it('renders MicIconSVG', () => {
    const wrapper = mount(<div><MicIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders MicBorderIconSVG', () => {
    const wrapper = mount(<div><MicBorderIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(5);
  });

  it('renders MicMutedIconSVG', () => {
    const wrapper = mount(<div><MicMutedIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders MicMutedBorderIconSVG', () => {
    const wrapper = mount(<div><MicMutedBorderIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(5);
  });

  it('renders MicrosoftEdgeIconSVG', () => {
    const wrapper = mount(<div><MicrosoftEdgeIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders NoImageIconSVG', () => {
    const wrapper = mount(<div><NoImageIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(8);
  });

  it('renders PauseIconSVG', () => {
    const wrapper = mount(<div><PauseIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders PauseBorderIconSVG', () => {
    const wrapper = mount(<div><PauseBorderIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(5);
  });

  it('renders ProcessIconSVG', () => {
    const wrapper = mount(<div><ProcessIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEquarocess

  it('renders PubSubIconSVG', () => {
    const wrapper = mount(<div><PubSubIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(5);
  });

  it('renders RunApplicationIconSVG', () => {
    const wrapper = mount(<div><RunApplicationIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(5);
  });

  it('renders SafariIconSVG', () => {
    const wrapper = mount(<div><SafariIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders SearchIconSVG', () => {
    const wrapper = mount(<div><SearchIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(4);
  });

  it('renders SMSIconSVG', () => {
    const wrapper = mount(<div><SMSIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(4);
  });

  it('renders SpeakerIconSVG', () => {
    const wrapper = mount(<div><SpeakerIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders StatusAvailableIconSVG', () => {
    const wrapper = mount(<div><StatusAvailableIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(2);
  });

  it('renders StatusBusyIconSVG', () => {
    const wrapper = mount(<div><StatusBusyIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders StatusOfflineIconSVG', () => {
    const wrapper = mount(<div><StatusOfflineIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders StatusWarningIconSVG', () => {
    const wrapper = mount(<div><StatusWarningIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders TransfigureIconSVG', () => {
    const wrapper = mount(<div><TransfigureIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders TransformIconSVG', () => {
    const wrapper = mount(<div><TransformIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders UpdateApplicationIconSVG', () => {
    const wrapper = mount(<div><UpdateApplicationIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(5);
  });

});
