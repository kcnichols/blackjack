// s2s-svg-navigation/__tests__/index-js

//'use strict';
import React from 'react';
import { shallow, mount, render } from 'enzyme';
import sinon from 'sinon';

jest.unmock('../src/index.jsx');
jest.unmock('../node_modules/s2s-base-class');
jest.unmock('../node_modules/sinon');
// jest.unmock('../node_modules/immutable');
// jest.unmock('../node_modules/sinon');
import ReactDOM from 'react-dom';
import {
  AccountIconSVG,
  AlphanumericIconSVG,
  ArrowDownIconSVG,
  ArrowUpIconSVG,
  ApplicationIconSVG,
  BackIconSVG,
  CalendarIconSVG,
  CalendarAddIconSVG,
  CloseIconSVG,
  CloseBorderIconSVG,
  ContactsIconSVG,
  FlowIconSVG,
  HistoryIconSVG,
  HomeIconSVG,
  PermissionIconSVG,
  PermissionGroupIconSVG,
  RightArrowIconSVG,
  RoleIconSVG,
  SettingsAudioIconSVG,
  SettingsIconSVG,
  SupportIconSVG,
  TransferIconSVG,
  TransferBorderIconSVG,
  UserGroupIconSVG
} from '../src/index.jsx';

//These tests will simply make sure that each svg has a path, title, and description. Unlike some of the other SVG tests many of these have more than one path.
describe('s2s-svg-navigation tests', ()=>{

  it('renders AccountIconSVG', () => {
    const wrapper = mount(<div><AccountIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(4);
  });

  it('renders AlphanumericIconSVG', () => {
    const wrapper = mount(<div><AlphanumericIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(4);
  });

  it('renders ApplicationIconSVG', () => {
    const wrapper = mount(<div><ApplicationIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(4);
  });

  it('renders ArrowDownIconSVG', () => {
    const wrapper = mount(<div><ArrowDownIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders ArrowUpIconSVG', () => {
    const wrapper = mount(<div><ArrowUpIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders BackIconSVG', () => {
    const wrapper = mount(<div><BackIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders CalendarIconSVG', () => {
    const wrapper = mount(<div><CalendarIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders CalendarAddIconSVG', () => {
    const wrapper = mount(<div><CalendarAddIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders CloseIconSVG', () => {
    const wrapper = mount(<div><CloseIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders CloseBorderIconSVG', () => {
    const wrapper = mount(<div><CloseBorderIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(4);
  });

  it('renders ContactsIconSVG', () => {
    const wrapper = mount(<div><ContactsIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders FlowIconSVG', () => {
    const wrapper = mount(<div><FlowIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders HomeIconSVG', () => {
    const wrapper = mount(<div><HomeIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders PermissionIconSVG', () => {
    const wrapper = mount(<div><PermissionIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders PermissionGroupIconSVG', () => {
    const wrapper = mount(<div><PermissionGroupIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders RightArrowIconSVG', () => {
    const wrapper = mount(<div><RightArrowIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders SettingsAudioIconSVG', () => {
    const wrapper = mount(<div><SettingsAudioIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders HistoryIconSVG', () => {
    const wrapper = mount(<div><HistoryIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders RoleIconSVG', () => {
    const wrapper = mount(<div><RoleIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders SettingsIconSVG', () => {
    const wrapper = mount(<div><SettingsIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders SupportIconSVG', () => {
    const wrapper = mount(<div><SupportIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(3);
  });

  it('renders TransferIconSVG', () => {
    const wrapper = mount(<div><TransferIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(4);
  });

  it('renders TransferBorderIconSVG', () => {
    const wrapper = mount(<div><TransferBorderIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(5);
  });

  it('renders UserGroupIconSVG', () => {
    const wrapper = mount(<div><UserGroupIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('path').length + wrapper.find('title').length + wrapper.find('desc').length ).toEqual(5);
  });

});
